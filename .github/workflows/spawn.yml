##
## Spawn Pull Request to sandbox
##
name: spawn
on:
  pull_request:
    types:
      - labeled

jobs:
  it:
    strategy:
      matrix:
        stack: [blueprint-golang]
    runs-on: ubuntu-latest
    if: github.event.label.name == '[@] deploy'
    steps:

      ##
      ## setup environment
      - name: golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: checkout
        uses: actions/checkout@v2

      ##
      ## fetches deps
      - name: deps
        run: |
          npm install -g aws-cdk
          go get -v -t -d ./...

      ##
      ## deploys application to aws
      - name: aws access
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
  
      - name: cdk deploy
        run: |
          cdk deploy ${{ matrix.stack }}-pr${{ github.event.number }} \
            -c vsn=pr${{ github.event.number }} \
            --outputs-file $GITHUB_WORKSPACE/stack.json
        env:
          GOPATH: /home/runner/work/blueprint-serverless-golang/go

      ##
      ## discover url of deployed api and runs api testing   
      - name: discover
        id: discover
        run: |
          echo ::set-output name=target::$(jq -r '.["${{ matrix.stack }}-pr${{ github.event.number }}"] | to_entries | .[] | select(.key|test("GatewayEndpoint.*")) | .value ' < $GITHUB_WORKSPACE/stack.json)

      - name: comment
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: '**sandbox** #${{ github.event.number }} is spawned: ${{ steps.discover.outputs.target }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          label: '[@] deploy'
          type: remove
