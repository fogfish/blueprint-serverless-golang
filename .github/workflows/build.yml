name: build
on:
  push:
    branches:
      - main
      - /refs/heads/main

jobs:
  it:
    strategy:
      matrix:
        stack: [blueprint-golang]
    runs-on: ubuntu-latest
    steps:

      ##
      ## setup environment
      - name: golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: checkout
        uses: actions/checkout@v2

      ##
      ## fetch deps
      - name: go get tools
        run: |
          go get golang.org/x/lint/golint

      - name: deps
        run: |
          go get -v -t -d ./...

      ##
      ## builds and tests
      - name: go build
        run: |
          go build -v ./...

      - name: go test
        run: |
          go test -v -coverprofile=profile.cov ./...
        env:
          GOPATH: /home/runner/work/blueprint-serverless-golang/go

      - uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov

      ##
      ## deploys application to aws
      - name: aws access
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: cdk deploy
        run: |
          cdk deploy ${{ matrix.stack }}-latest \
            -c vsn=latest \
            --outputs-file $GITHUB_WORKSPACE/stack.json
        env:
          GOPATH: /home/runner/work/blueprint-serverless-golang/go

      ##
      ## discover url of deployed api and runs api testing   
      - name: discover
        id: discover
        run: |
          echo ::set-output name=target::$(jq -r '.["${{ matrix.stack }}-latest"] | to_entries | .[] | select(.key|test("GatewayEndpoint.*")) | .value ' < $GITHUB_WORKSPACE/stack.json)

      - name: comment
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: '**sandbox**: ${{ steps.discover.outputs.target }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
