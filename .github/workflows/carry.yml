name: carry
on:
  release:
    types: [published]

jobs:
  it:
    strategy:
      matrix:
        stack: [blueprint-golang]

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: peter-evans/create-issue-from-file@v4
        id: spawn-release
        with:
          title: Release ${{ github.event.release.name }} of `${{ matrix.stack }}`  
          content-filepath: ./.github/issue-spawn-release.md

      - uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: go get tools
        run: |
          npm install -g aws-cdk

      - name: aws access
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: cdk deploy
        run: |
          cdk deploy ${{ matrix.stack }}-${{ github.event.release.name }} \
            -c vsn=${{ github.event.release.name }} \
            --outputs-file $GITHUB_WORKSPACE/stack.json
        env:
          GOPATH: /home/runner/work/${{ github.event.repository.name }}/go

      ##
      ## discover url of deployed api and runs api testing    
      - name: discover
        id: discover
        run: |
          echo ::set-output name=target::$(jq -r '.["${{ matrix.stack }}-${{ github.event.release.name }}"] | to_entries | .[] | select(.key|test("GatewayEndpoint.*")) | .value ' < $GITHUB_WORKSPACE/stack.json)

      - uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ steps.spawn-release.outputs.issue-number }}
          comment: |
            Release ${{ github.event.release.name }} of **${{ matrix.stack }}** is deployed to cloud environment:
            - **url**: ${{ steps.discover.outputs.target }}

