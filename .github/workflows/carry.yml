name: carry
on:
  release:
    types: [published]

jobs:
  it:
    strategy:
      matrix:
        stack: [scud]
    runs-on: ubuntu-latest
    steps:

      ##
      ## setup environment
      - name: golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: fix GOPATH
        run: |
          echo "GOPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
        shell: bash

      - name: checkout
        uses: actions/checkout@v2
        with:
          path: src/github.com/${{ github.repository }}

      ##
      ## fetch deps
      - name: deps
        run: |
          go get -v -t -d github.com/${{ github.repository }}/...
          npm -C src/github.com/${{ github.repository }}/cloud \
            install

      ##
      ## deploys application to aws
      - name: aws access
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: cdk deploy
        run: |
          npm -C src/github.com/${{ github.repository }}/cloud \
            run -- cdk deploy ${{ matrix.stack }}-${{ github.event.release.name }} \
            -c vsn=${{ github.event.release.name }} \
            --outputs-file $GITHUB_WORKSPACE/stack.json

      ##
      ## discover url of deployed api and runs api testing    
      - name: discover
        id: discover
        run: |
          echo ::set-output name=target::$(jq -r '.["${{ matrix.stack }}-${{ github.event.release.name }}"] | to_entries | .[] | select(.key|test("GatewayEndpoint.*")) | .value ' < $GITHUB_WORKSPACE/stack.json)

      - uses: assay-it/github-actions-webhook@latest
        with:
          secret: ${{ secrets.ASSAY_SECRET_KEY }}
          target: ${{ steps.discover.outputs.target }}

